// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedeSocial.Repository.Context;

namespace RedeSocial.Repository.Migrations
{
    [DbContext(typeof(RedeSocialContext))]
    [Migration("20200911160544_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RedeSocial.Domain.Account.Account", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<Guid?>("ID_PerfilID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ID_PerfilID");

                    b.HasIndex("ID_RoleID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("RedeSocial.Domain.Account.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("RedeSocial.Domain.Post.Comentario", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ID_PerfilID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ID_PostagemID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ID_PerfilID");

                    b.HasIndex("ID_PostagemID");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("RedeSocial.Domain.Post.Postagem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPostUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ID_PerfilID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ID_PerfilID");

                    b.ToTable("Portagens");
                });

            modelBuilder.Entity("RedeSocial.Domain.Profile.Perfil", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid?>("PerfilID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PerfilID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("ID");

                    b.HasIndex("PerfilID");

                    b.HasIndex("PerfilID1");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("RedeSocial.Domain.Account.Account", b =>
                {
                    b.HasOne("RedeSocial.Domain.Profile.Perfil", "ID_Perfil")
                        .WithMany()
                        .HasForeignKey("ID_PerfilID");

                    b.HasOne("RedeSocial.Domain.Account.Role", "ID_Role")
                        .WithMany("IDs_Accounts")
                        .HasForeignKey("ID_RoleID");
                });

            modelBuilder.Entity("RedeSocial.Domain.Post.Comentario", b =>
                {
                    b.HasOne("RedeSocial.Domain.Profile.Perfil", "ID_Perfil")
                        .WithMany()
                        .HasForeignKey("ID_PerfilID");

                    b.HasOne("RedeSocial.Domain.Post.Postagem", "ID_Postagem")
                        .WithMany("IDs_Comentarios")
                        .HasForeignKey("ID_PostagemID");
                });

            modelBuilder.Entity("RedeSocial.Domain.Post.Postagem", b =>
                {
                    b.HasOne("RedeSocial.Domain.Profile.Perfil", "ID_Perfil")
                        .WithMany("IDs_Postagens")
                        .HasForeignKey("ID_PerfilID");
                });

            modelBuilder.Entity("RedeSocial.Domain.Profile.Perfil", b =>
                {
                    b.HasOne("RedeSocial.Domain.Profile.Perfil", null)
                        .WithMany("IDs_Seguidores")
                        .HasForeignKey("PerfilID");

                    b.HasOne("RedeSocial.Domain.Profile.Perfil", null)
                        .WithMany("IDs_Seguindo")
                        .HasForeignKey("PerfilID1");
                });
#pragma warning restore 612, 618
        }
    }
}
